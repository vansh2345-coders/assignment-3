#include<iostream>
#include<stack>
using namespace std;
int priority(char c) {
    if(c == '^') return 3;
    if(c == '*' || c == '/') return 2;
    if(c == '+' || c == '-') return 1;
    return -1;
}
string infixtopostfix(string s){
    int i=0; stack<char> st; string ans="";
    while(i<s.length()){
        if((s[i]>='A' && s[i]<='Z') || (s[i]>='a' && s[i]<='z')  || (s[i]>='0' && s[i]<='9') ){
            ans = ans + s[i];
        }
        else if(s[i]=='(') st.push(s[i]);
        else if(s[i]==')'){
            while(st.empty() && st.top()!='('){
                ans += st.top();
                st.pop();
            }
        }
        else{
            while(st.empty() && priority(s[i]) <= priority(st.top())){
                ans += st.top();
                st.pop();
            }
            st.push(s[i]);
        } i++;
    }
    while(!st.empty()){
        ans=ans+ st.top();
        st.pop();
    }
    return ans;

}
int main(){
    string expr;
    cout<<"Enter infix expression: ";
    cin>> expr;

    cout<<"Postfix expression: "<< infixtopostfix(expr) << endl;
    return 0;
}
